name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none
      - name: Install Composer dependencies
        run: |
          composer install --no-interaction --prefer-dist --optimize-autoloader
      - name: Run PHP CS Fixer
        run: |
          if [ -f vendor/bin/php-cs-fixer ]; then
            vendor/bin/php-cs-fixer fix --dry-run --diff
          else
            echo "PHP CS Fixer not installed, skipping"
          fi
      - name: Run ESLint
        run: |
          if [ -f node_modules/.bin/eslint ]; then
            node_modules/.bin/eslint resources/js --ext .js,.vue
          else
            echo "ESLint not installed, skipping"
          fi

  phpstan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none
      - name: Install Composer dependencies
        run: |
          composer install --no-interaction --prefer-dist --optimize-autoloader
      - name: Install PHPStan
        run: |
          composer require --dev phpstan/phpstan
      - name: Run PHPStan
        run: |
          vendor/bin/phpstan analyse

  pest-tests:
    runs-on: ubuntu-latest
    needs: [quality, phpstan]
    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Composer dependencies
        run: |
          composer install --no-interaction --prefer-dist --optimize-autoloader
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Run Migrations
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: |
          mkdir -p database
          touch database/database.sqlite
          php artisan migrate --force
      - name: Run Pest Tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"
        run: |
          php artisan cache:clear
          php artisan test
